@model IEnumerable<Moodeng.AspNetUser>

@{
    ViewBag.Title = "Manage Users";
    Layout = "~/Views/Shared/_Layout-Admin.cshtml";
}

<div class="min-h-screen bg-gray-50 p-6">
    <div class="flex justify-between items-center mb-6">
        <h2 class="text-2xl font-bold text-gray-800">Manage Users</h2>
        <div class="flex space-x-3">
            <button id="deleteSelectedBtn"
                    onclick="deleteSelected()"
                    class="hidden bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors">
                <svg class="w-5 h-5 inline-block mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                </svg>
                Delete Selected (<span id="selectedCount">0</span>)
            </button>
            <a href="@Url.Action("Create", "AdminManageUser")"
               class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                + Create New User
            </a>

        </div>
    </div>

    <div class="bg-white rounded-xl shadow-lg p-6 mb-6">
        @using (Html.BeginForm("Index", "AdminManageUser", FormMethod.Get))
        {
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Search</label>
                    <input type="text" name="searchTerm" 
                           value="@ViewBag.CurrentSearch"
                           placeholder="Search by name or email..."
                           class="w-full rounded-lg border-gray-300 focus:border-blue-500 focus:ring-1 focus:ring-blue-500">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Role</label>
                    @Html.DropDownList("role",
                        new SelectList(new[] 
                        { 
                            new { Value = "All", Text = "All" },
                            new { Value = "Admin", Text = "Admin" },
                            new { Value = "Customer", Text = "Customer" },
                            new { Value = "Retail", Text = "Retail" }
                        }, "Value", "Text", ViewBag.CurrentRole),
                        new { @class = "w-full rounded-lg border-gray-300 focus:border-blue-500 focus:ring-1 focus:ring-blue-500", 
                              onchange = "this.form.submit()" })
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                    @Html.DropDownList("status",
                        new SelectList(new[] 
                        { 
                            new { Value = "All", Text = "All" },
                            new { Value = "Active", Text = "Active" },
                            new { Value = "Inactive", Text = "Inactive" }
                        }, "Value", "Text", ViewBag.CurrentStatus),
                        new { @class = "w-full rounded-lg border-gray-300 focus:border-blue-500 focus:ring-1 focus:ring-blue-500",
                              onchange = "this.form.submit()" })
                </div>
            </div>
            <div class="mt-4 flex justify-end">
                <button type="submit" 
                        class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                    <svg class="w-5 h-5 inline-block mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                    Search
                </button>
            </div>
        }
    </div>

    <div class="bg-white rounded-xl shadow-lg overflow-hidden">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        <input type="checkbox"
                               id="selectAll"
                               class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Login</th>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @foreach (var user in Model)
                {
                    <tr class="hover:bg-gray-50">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <input type="checkbox"
                                   value="@user.Id"
                                   class="user-checkbox rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="h-10 w-10 flex-shrink-0">
                                    <div class="h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center">
                                        <span class="text-gray-500 font-medium">@user.UserName.Substring(0, 1).ToUpper()</span>
                                    </div>
                                </div>
                                <div class="ml-4">
                                    <div class="text-sm font-medium text-gray-900">@user.UserName</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm text-gray-500">@user.Email</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                                @user.Role
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full @(user.LockoutEnabled ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                @(user.LockoutEnabled ? "Active" : "Inactive")
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            @(user.LockoutEndDateUtc?.ToString("dd/MM/yyyy HH:mm") ?? "Never")
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-2">
                            <a href="@Url.Action("Details", "AdminManageUser", new { id = user.Id })" 
                               class="inline-flex items-center px-3 py-1.5 bg-blue-100 text-blue-700 rounded-md hover:bg-blue-200 transition-colors">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                </svg>
                                View
                            </a>
                            <a href="@Url.Action("Edit", "AdminManageUser", new { id = user.Id })" 
                               class="inline-flex items-center px-3 py-1.5 bg-blue-100 text-blue-700 rounded-md hover:bg-blue-200 transition-colors">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                </svg>
                                Edit
                            </a>
                            <a href="@Url.Action("Delete", "AdminManageUser", new { id = user.Id })" 
                               class="inline-flex items-center px-3 py-1.5 bg-red-100 text-red-700 rounded-md hover:bg-red-200 transition-colors">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                </svg>
                                Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        const selectAll = document.getElementById('selectAll');
        const userCheckboxes = document.querySelectorAll('.user-checkbox');
        const deleteSelectedBtn = document.getElementById('deleteSelectedBtn');
        const selectedCountSpan = document.getElementById('selectedCount');
        let selectedUsers = new Set();

        selectAll.addEventListener('change', function () {
            userCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
                if (this.checked) {
                    selectedUsers.add(checkbox.value);
                } else {
                    selectedUsers.delete(checkbox.value);
                }
            });
            updateDeleteButton();
        });

        userCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                if (this.checked) {
                    selectedUsers.add(this.value);
                } else {
                    selectedUsers.delete(this.value);
                    selectAll.checked = false;
                }
                updateDeleteButton();
            });
        });

        function updateDeleteButton() {
            selectedCountSpan.textContent = selectedUsers.size;
            if (selectedUsers.size > 0) {
                deleteSelectedBtn.classList.remove('hidden');
            } else {
                deleteSelectedBtn.classList.add('hidden');
            }
        }

        function deleteSelected() {
            if (confirm('Are you sure you want to delete the selected users? This action cannot be undone.')) {
                // TODO: Implement bulk delete functionality
                console.log('Deleting users:', Array.from(selectedUsers));
            }
        }
    </script>
}

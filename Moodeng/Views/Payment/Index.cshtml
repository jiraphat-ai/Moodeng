@model List<Moodeng.Cart>
@{ ViewBag.Title = "Index";
                Layout = "~/Views/Shared/_Layout.cshtml"; }

<h1 class=" text-3xl font-semibold">Checkout</h1>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8">
            <div class="card p-4 mb-4 border">
                <h3 class="mb-3 font-semibold">Review Item And Shipping</h3>
                <div class="row">
                    @foreach (var item in Model)
                    {
        <div class="col-md-4 mb-4 d-flex flex-column align-items-center">
            <div class="card h-100 text-center p-3">
                <div class="d-flex align-items-center">
                    <img src="@item.Product.Picture" alt="Product Image" class="product-image me-2" />
                    <div class="product-details text-start">
                        <h5 class="mb-1">@item.Product.ProductName</h5>
                        <p class="mb-1">Quantity: @item.Quantity</p>
                        <h5 class="mb-0">Price: @item.Product.Price.ToString("C")</h5>
                    </div>
                </div>
            </div>
        </div>}
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card p-4">
                <h3 class=" font-semibold">Order Summary</h3>
                <h5 class="mb-3">Subtotal: <span class="float-end ">@Model.Sum(i => i.Product.Price * i.Quantity).ToString("C")</span></h5>
                <h5 class="mb-3">Tax (10%): <span class="float-end">@(Model.Sum(i => i.Product.Price * i.Quantity)/10)</span></h5>
                <h5 class="mb-3">Shipping: <span class="float-end">$0.00</span></h5>
                <h4 class="mb-3">Total: <span class="float-end">@(-Model.Sum(i => i.Product.Price * i.Quantity)/10 +@Model.Sum(i => i.Product.Price * i.Quantity))</span></h4>

                <h3 class="mb-3 font-semibold mt-2">Payment Details</h3>
                <form id="paymentForm">
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="radio" name="paymentMethod" id="cashOnDelivery" value="CashOnDelivery" required />
                        <label class="form-check-label" for="cashOnDelivery">Cash on Delivery</label>
                    </div>

                    <!-- จัดปุ่มตรงกลางโดยใช้ d-flex justify-content-center -->
                    <div class=" flex justify-center mt-10">
                        <button type="submit" id="payButton" class="btn btn-primary w-75 mx-auto " onclick="addToOrder()">
                            Pay $@((-Model.Sum(i => i.Product.Price * i.Quantity)/10 + Model.Sum(i => i.Product.Price * i.Quantity)).ToString("F2"))
                        </button>

                    </div>
                </form>
            </div>
        </div>


        <div class="col-md-8">
            <div class="card p-4 ">
                <h3 class="mb-3 font-semibold">Delivery Information</h3>
                <form>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="firstName" class="form-label">First Name*</label>
                            <input type="text" class="form-control" id="firstName" required />
                        </div>
                        <div class="col-md-6">
                            <label for="lastName" class="form-label">Last Name*</label>
                            <input type="text" class="form-control" id="lastName" required />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label">Address*</label>
                        <input type="text" class="form-control" id="address" required />
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="city" class="form-label">City / Town*</label>
                            <input type="text" class="form-control" id="city" required />
                        </div>
                        <div class="col-md-6">
                            <label for="zipCode" class="form-label">Zip Code*</label>
                            <input type="text" class="form-control" id="zipCode" required />
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="mobile" class="form-label">Mobile*</label>
                            <input type="text" class="form-control" id="mobile" required />
                        </div>
                        <div class="col-md-6">
                            <label for="email" class="form-label">Email*</label>
                            <input type="email" class="form-control" id="email" required />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    async function addToOrder() {
        try {
            const response = await axios.post("@Url.Action("AddToOrder", "Payment")");
            if (response.status === 200) {
                alert(response.data.message);
                window.location.href = "@Url.Action("Index","TrackOrder")";
            }
        } catch (error) {
            alert("An error occurred: " + error.message);
        }
    }

    document.addEventListener("DOMContentLoaded", () => {
        const paymentForm = document.getElementById("paymentForm");
        const payButton = document.getElementById("payButton");
        const requiredFields = [
            "firstName",
            "lastName",
            "address",
            "city",
            "zipCode",
            "mobile",
            "email",
        ];

        function isFormValid() {
            return requiredFields.every((id) => {
                const field = document.getElementById(id);
                return field && field.value.trim() !== "";
            });
        }

        function togglePayButton() {
            payButton.disabled = !isFormValid();
        }

        requiredFields.forEach((id) => {
            const field = document.getElementById(id);
            if (field) {
                field.addEventListener("input", togglePayButton);
            }
        });
    });
</script>

<style>
    .card {
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 20px;
        background-color: #f8f9fa;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .row-cols-md-3 > .col {
        display: flex;
        justify-content: center;
    }

    .product-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 4px;
    }

    .product-details h5 {
        margin-bottom: 0.5rem;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        border-radius: 5px;
        padding: 10px 26px;
        font-size: 16px;
        font-weight: 600;
      
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

    h3 {
        font-size: 1.75rem;
    }

    h5 {
        font-size: 1.25rem;
    }

    .form-label {
        font-weight: bold;
    }

    .float-end {
        float: right;
      
    }

    .g-4 > .col {
        margin-bottom: 1.5rem;
    }

    .d-flex.align-items-center {
        display: flex;
        align-items: center;
    }

    .me-2 {
        margin-right: 0.5rem;
    }
</style>

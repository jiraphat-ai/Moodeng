@model List<Moodeng.Product>
@{
    ViewBag.Title = "Home Page";
}

@Styles.Render("~/Content/css")
<style>

    html,
    body {
        position: relative;
        height: 100%;
    }

    body {
        background: #eee;
        font-family: "Poppins", serif !important;
        font-size: 14px;
        color: #000;
    }

    swiper-container {
        width: 100%;
        height: 100%;
    }

    swiper-slide {
        text-align: center;
        font-size: 18px;
        background: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        swiper-slide img {
            display: block;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
</style>

<div class="w-full min-h-[100svh] pb-[10rem]">
    <div class="w-full">
        <swiper-container class="mySwiper" pagination="true">
            <swiper-slide><img src="https://cf.shopee.co.th/file/th-11134258-7rash-m1f0s4w71773ae_xxhdpi" /></swiper-slide>
            <swiper-slide><img src="https://cf.shopee.co.th/file/th-11134258-7rash-m1f0s4w71773ae_xxhdpi" /></swiper-slide>
            <swiper-slide><img src="https://cf.shopee.co.th/file/th-11134258-7rash-m1f0s4w71773ae_xxhdpi" /></swiper-slide>
        </swiper-container>
    </div>

    <div class="mt-10 mb-8 flex items-center justify-between">
        <h2 class="text-2xl font-bold mb-4 uppercase text-4xl">Categories</h2>
        <div class="flex flex-wrap gap-4">
            @foreach (var category in new[] { "Electronics", "Clothing", "Groceries", "Books", "Furniture" })
            {
                var isSelected = (Request["searchCategory"] == category);
                <form method="get" action="@Url.Action("Index")" class="inline">
                    <input type="hidden" name="searchCategory" value="@category" />
                    <button type="submit" class="text-2xl px-8 py-3 rounded-full transition-colors @(isSelected ? "bg-[#003D29] text-white" : "bg-[#E9E9E9] text-[#003D29] hover:bg-[#003D29] hover:text-white")">
                        @category
                    </button>
                </form>
            }
        </div>

    </div>

    <div class="grid grid-cols-4 mt-10 gap-8 max-[1277px]:grid-cols-3 max-md:grid-cols-2 max-[475px]:grid-cols-1 min-[1320px]:w-[90%] mx-auto">
        @foreach (var product in Model)
        {
            <div class="col-span-1 bg-[#F5F6F6] rounded-2xl overflow-hidden p-5">
                <div class="bg-white rounded-lg overflow-hidden relative p-3">
                    <img src="@product.Picture" alt="@product.ProductName" class="w-full h-[22rem] object-contain" />

                    <div class="size-[4rem] flex items-center justify-center bg-white rounded-full absolute top-0 right-0 cursor-pointer">
                        <input type="hidden" name="productId" value="@product.ProductId" />
                        <button id="addW" onclick="addWishList(@product.ProductId)" class="ri-heart-line text-4xl font-light"></button>
                    </div>
                </div>
                <div class="py-4">
                    <div class="flex justify-between items-center text-2xl font-bold">
                        <h3 class="text-3xl font-bold">@product.ProductName</h3>
                        <h4 class="text-3xl font-bold">@product.Price.ToString()</h4>
                    </div>
                    <p class="text-xl">@product.Description</p>
                    <div class="mt-4">
                        <button class="px-12 py-3 border border-[#003D29] text-[#003D29] rounded-full" onclick="addToCart(@product.ProductId)">
                            Add to cart
                        </button>
                    </div>
                    <div class="mt-4">
                        <a href="@Url.Action("Details", "Home", new { id = product.ProductId })" class="px-12 py-3 border border-[#003D29] text-[#003D29] rounded-full">View Details</a>
                    </div>
                </div>
            </div>
        }


    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-element-bundle.min.js"></script>
<script>

    async function addWishList(id) {
        const add = await axios.post("@Url.Action("AddToWishlist", "Home")", { productId: id });
        if (add.status == 200) {
            alert(add.data.message);
        }
    }

    async function addToCart(productId) {
    try {
        const response = await axios.post("@Url.Action("AddToCart", "Home")", { productId: productId, quantity: 1 });
        if (response.status === 200) {
            alert(response.data.message);
        }
    } catch (error) {
        alert("An error occurred: " + error.message);
    }
}
</script>
@model List<Moodeng.Wishlist>

@{ ViewBag.Title = "Your Wishlist"; }

<style>
    body {
        background: #fff;
        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
        font-size: 14px;
        color: #000;
    }

    .wishlist-container {
        width: 100%;
        padding: 2rem;
    }

    .wishlist-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 1.5rem;
    }

    .wishlist-item {
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        display: flex;
        flex-direction: column;
        padding: 1rem;
    }

        .wishlist-item img {
            width: 100%;
            height: 150px;
            object-fit: fill;
        }

    .wishlist-details {
        flex-grow: 1;
        margin-top: 1rem;
    }

        .wishlist-details p {
            margin: 0.5rem 0;
        }

    .wishlist-actions {
        margin-top: 1rem;
        display: flex;
        justify-content: space-between;
    }

        .wishlist-actions button {
            padding: 0.5rem 1rem;
            background: #e91e63;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            .wishlist-actions button:hover {
                background: #c2185b;
            }
</style>

<div class="wishlist-container">
    <h1 class="text-4xl font-bold mb-6 flex item items-center mt-10">Your Wishlist</h1>

    @if (Model.Any())
    {
        <div class="wishlist-grid">
            @foreach (var item in Model)
            {
                <div class="wishlist-item">
                    <img src="@item.Product.Picture" alt="@item.Product.ProductName" />
                    <div class="wishlist-details ">
                        <h3 class="font-bold">@item.Product.ProductName</h3>
                        <p class="text-xl">@item.Product.Description</p>
                        <p><strong>Price:</strong> @item.Product.Price.ToString("C")</p>
                    </div>
                    <div class="wishlist-actions">
                        <form method="post" action="@Url.Action("AddToCart", "WishList")">
                            <input type="hidden" name="productId" value="@item.Product.ProductId" />
                            <button type="submit">Add to Cart</button>
                        </form>
                        <form method="post" action="javascript:void(0);">
                            <button type="button" onclick="RemoveWishList(@item.WishlistId)">Remove</button>
                        </form>
                    </div>
                </div>

            }
        </div>
    }
    else
    {
        <p>Your wishlist is empty.</p>}
</div>

<script>
async function RemoveWishList(id) {
    try {
        const response = await axios.post("@Url.Action("RemoveFromWishlist", "WishList")", { wishlistId: parseInt(id) });
        if (response.data.success) {
            alert(response.data.message);
            document.getElementById(`wishlist-item-${id}`).remove();
        } else {
            alert(response.data.message);
        }
    } catch (error) {
        console.error(error);
    }
}
    async function AddToCart(productId) {
    try {
        const response = await axios.post("@Url.Action("AddToCart", "WishList")", { productId: parseInt(productId) });

        if (response.data.success) {
            alert(response.data.message);
        } else {
            alert(response.data.message);
        }
    } catch (error) {
        console.error(error);
        alert("An error occurred while adding the product to the cart.");
    }
}
</script>